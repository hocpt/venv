-- ====================================================================
-- Script SQL t·∫°o d·ªØ li·ªáu m·∫´u (Seed Data) cho database 'automation'
-- ====================================================================

-- T√ôY CH·ªåN: X√≥a d·ªØ li·ªáu c≈© trong c√°c b·∫£ng c·∫•u h√¨nh tr∆∞·ªõc khi th√™m m·ªõi
-- L∆∞u √Ω th·ª© t·ª± x√≥a ƒë·ªÉ tr√°nh l·ªói kh√≥a ngo·∫°i!
/*
DELETE FROM public.stage_transitions;
DELETE FROM public.template_variations;
DELETE FROM public.response_templates;
DELETE FROM public.simple_rules; -- N·∫øu b·∫°n c√≥ d√πng b·∫£ng n√†y
DELETE FROM public.accounts WHERE default_persona_id IS NOT NULL; -- X√≥a account c√≥ FK tr∆∞·ªõc
DELETE FROM public.ai_personas;
DELETE FROM public.strategy_stages;
DELETE FROM public.strategies;
DELETE FROM public.prompt_templates;
DELETE FROM public.task_state WHERE task_name = 'suggestion_job';
-- Kh√¥ng n√™n x√≥a accounts, interaction_history, suggested_rules tr·ª´ khi test l·∫°i t·ª´ ƒë·∫ßu h·∫≥n
*/

-- B·∫Øt ƒë·∫ßu m·ªôt transaction ƒë·ªÉ ƒë·∫£m b·∫£o t·∫•t c·∫£ l·ªánh ch·∫°y th√†nh c√¥ng ho·∫∑c kh√¥ng l·ªánh n√†o c·∫£
BEGIN;

-- 1. AI Personas (Th√™m c√°c persona m·∫∑c ƒë·ªãnh v√† v√≠ d·ª•)
-- ƒê·∫£m b·∫£o c√°c ID n√†y kh·ªõp v·ªõi c·∫•u h√¨nh trong config.py
INSERT INTO public.ai_personas (persona_id, name, description, base_prompt, model_name, generation_config, updated_at) VALUES
('general_assistant', 'Tr·ª£ l√Ω Chung', 'Persona tr·∫£ l·ªùi m·∫∑c ƒë·ªãnh, phong c√°ch th√¢n thi·ªán, h·ªØu √≠ch.', E'B·∫°n l√† m·ªôt tr·ª£ l√Ω ·∫£o t√™n Linh, r·∫•t th√¢n thi·ªán v√† lu√¥n c·ªë g·∫Øng gi√∫p ƒë·ª° ng∆∞·ªùi d√πng m·ªôt c√°ch nhi·ªát t√¨nh nh·∫•t c√≥ th·ªÉ. H√£y tr·∫£ l·ªùi c√°c c√¢u h·ªèi m·ªôt c√°ch r√µ r√†ng, ng·∫Øn g·ªçn v√† l·ªãch s·ª±.', 'models/gemini-1.5-flash-latest', NULL, NOW()),
('rule_suggester', 'B·ªô ƒê·ªÅ xu·∫•t Lu·∫≠t', 'Persona chuy√™n ph√¢n t√≠ch c√°c cu·ªôc h·ªôi tho·∫°i th√†nh c√¥ng ƒë·ªÉ ƒë·ªÅ xu·∫•t keywords v√† template m·ªõi.', E'Ph√¢n t√≠ch t∆∞∆°ng t√°c ƒë∆∞·ª£c cung c·∫•p. Nhi·ªám v·ª• c·ªßa b·∫°n l√† x√°c ƒë·ªãnh c√°c t·ª´ kh√≥a k√≠ch ho·∫°t c·ªët l√µi (ng·∫Øn g·ªçn, ti·∫øng Vi·ªát, ph√¢n c√°ch b·∫±ng d·∫•u ph·∫©y) t·ª´ l·ªùi n√≥i c·ªßa ng∆∞·ªùi d√πng v√† t·∫°o ra m·ªôt m·∫´u tr·∫£ l·ªùi chung chung, c√≥ th·ªÉ t√°i s·ª≠ d·ª•ng (b·∫±ng ti·∫øng Vi·ªát) t·ª´ ph·∫£n h·ªìi c·ªßa tr·ª£ l√Ω. ƒê·ªÅ xu·∫•t th√™m m·ªôt Category ph√π h·ª£p (t·ª´ danh s√°ch ƒë∆∞·ª£c cung c·∫•p ho·∫∑c "other") v√† m·ªôt Template Ref g·ª£i nh·ªõ (vi·∫øt th∆∞·ªùng, kh√¥ng d·∫•u, d√πng g·∫°ch d∆∞·ªõi). ∆Øu ti√™n s·ª± ng·∫Øn g·ªçn v√† kh·∫£ nƒÉng √°p d·ª•ng r·ªông r√£i cho keywords v√† template ref. N·∫øu kh√¥ng th·ªÉ t·ªïng qu√°t h√≥a template text, ghi r√µ "Cannot generalize".', 'models/gemini-1.5-flash-latest', '{"temperature": 0.2, "max_output_tokens": 400}', NOW()),
('sales_friendly_female', 'NV B√°n h√†ng N·ªØ Th√¢n thi·ªán', 'Nh√¢n vi√™n b√°n h√†ng n·ªØ, kho·∫£ng 25 tu·ªïi, gi·ªçng vƒÉn t∆∞∆°i t·∫Øn, t·∫≠p trung v√†o vi·ªác gi·ªõi thi·ªáu s·∫£n ph·∫©m v√† ch·ªët ƒë∆°n.', E'B·∫°n l√† m·ªôt nh√¢n vi√™n b√°n h√†ng n·ªØ t√™n Mai, 25 tu·ªïi, l√†m vi·ªác t·∫°i c·ª≠a h√†ng [T√™n c·ª≠a h√†ng]. Phong c√°ch c·ªßa b·∫°n r·∫•t th√¢n thi·ªán, nhi·ªát t√¨nh v√† lu√¥n t∆∞∆°i c∆∞·ªùi. M·ª•c ti√™u ch√≠nh l√† gi·ªõi thi·ªáu s·∫£n ph·∫©m [T√™n S·∫£n Ph·∫©m], gi·∫£i ƒë√°p th·∫Øc m·∫Øc v√† thuy·∫øt ph·ª•c kh√°ch h√†ng mua h√†ng. H√£y s·ª≠ d·ª•ng c√°c bi·ªÉu c·∫£m vui v·∫ª (v√≠ d·ª•: ^^, üòä) v√† ng√¥n ng·ªØ g·∫ßn g≈©i, t·ª± nhi√™n.', NULL, '{"temperature": 0.8}', NOW())
ON CONFLICT (persona_id) DO UPDATE SET -- C·∫≠p nh·∫≠t n·∫øu ID ƒë√£ t·ªìn t·∫°i
    name = EXCLUDED.name,
    description = EXCLUDED.description,
    base_prompt = EXCLUDED.base_prompt,
    model_name = EXCLUDED.model_name,
    generation_config = EXCLUDED.generation_config,
    updated_at = NOW();

-- 2. Prompt Templates (Th√™m c√°c template cho c√°c t√°c v·ª• ch√≠nh)
INSERT INTO public.prompt_templates (name, task_type, template_content, updated_at) VALUES
(
    'Default Generate Reply', 'generate_reply',
    E'{{ base_prompt | default("B·∫°n l√† m·ªôt tr·ª£ l√Ω ·∫£o h·ªØu √≠ch.") }}\n\n### Ng·ªØ c·∫£nh H·ªôi tho·∫°i:\n- N·ªÅn t·∫£ng: {{ account_platform | default("Kh√¥ng r√µ") }}\n- M·ª•c ti√™u T√†i kho·∫£n: {{ account_goal | default("Kh√¥ng r√µ") }}\n- Giai ƒëo·∫°n Hi·ªán t·∫°i: {{ current_stage_id | default("Kh√¥ng r√µ") }}\n- √ù ƒë·ªãnh Ng∆∞·ªùi d√πng (ƒë√£ ph√°t hi·ªán): {{ user_intent | default("Ch∆∞a r√µ") }}\n- Ghi ch√∫ v·ªÅ T√†i kho·∫£n: {{ account_notes | default("Kh√¥ng c√≥") }}\n\n### L·ªãch s·ª≠ H·ªôi tho·∫°i G·∫ßn ƒë√¢y (T·ª´ c≈© ƒë·∫øn m·ªõi nh·∫•t):\n{% if formatted_history %}{{ formatted_history }}{% else %}Ch∆∞a c√≥ l·ªãch s·ª≠.{% endif %}\n\n### Tin nh·∫Øn M·ªõi Nh·∫•t t·ª´ Ng∆∞·ªùi d√πng:\n"""\n{{ received_text }}\n"""\n\n### Nhi·ªám v·ª• c·ªßa b·∫°n:\nD·ª±a v√†o vai tr√≤ ƒë∆∞·ª£c m√¥ t·∫£ trong prompt n·ªÅn t·∫£ng, ng·ªØ c·∫£nh h·ªôi tho·∫°i, l·ªãch s·ª≠ v√† tin nh·∫Øn m·ªõi nh·∫•t c·ªßa ng∆∞·ªùi d√πng, h√£y t·∫°o ra m·ªôt c√¢u tr·∫£ l·ªùi b·∫±ng **ti·∫øng Vi·ªát** ph√π h·ª£p, t·ª± nhi√™n, ƒë√∫ng v·ªõi gi·ªçng vƒÉn c·ªßa vai tr√≤ v√† h∆∞·ªõng t·ªõi m·ª•c ti√™u c·ªßa t√†i kho·∫£n. Tr·∫£ l·ªùi tr·ª±c ti·∫øp, kh√¥ng d√πng l·ªùi d·∫´n nh∆∞ "C√¢u tr·∫£ l·ªùi c·ªßa t√¥i l√†:". Tr√°nh d√πng placeholder b·∫°n kh√¥ng th·ªÉ t·ª± ƒëi·ªÅn.',
    NOW()
),
(
    'Default Suggest Rule Enhanced', 'suggest_rule',
    E'{{ base_prompt | default("B·∫°n l√† m·ªôt AI ph√¢n t√≠ch h·ªôi tho·∫°i.") }}\n\nPh√¢n t√≠ch t∆∞∆°ng t√°c th√†nh c√¥ng sau ƒë√¢y, n∆°i m√† ph·∫£n h·ªìi c·ªßa tr·ª£ l√Ω ƒë∆∞·ª£c t·∫°o b·ªüi m·ªôt AI kh√°c:\n\n### Ng·ªØ c·∫£nh T∆∞∆°ng t√°c:\n- User Intent Detected: {{ user_intent | default("N/A") }}\n- Conversation Stage: {{ stage_id | default("N/A") }}\n- Overall Strategy: {{ strategy_id | default("N/A") }}\n\n### N·ªôi dung T∆∞∆°ng t√°c:\n- User Said: """{{ received_text }}"""\n- Assistant (AI) Replied: """{{ sent_text }}"""\n\n### Nhi·ªám v·ª• c·ªßa b·∫°n:\n1.  **Identify Trigger Keywords:** Tr√≠ch xu·∫•t keywords/c·ª•m t·ª´ ng·∫Øn g·ªçn (ti·∫øng Vi·ªát, ph·∫©y c√°ch) t·ª´ "User Said" ƒë·∫°i di·ªán l√Ω do ch√≠nh cho ph·∫£n h·ªìi.\n2.  **Suggest Category:** ƒê·ªÅ xu·∫•t M·ªòT category ph√π h·ª£p t·ª´ danh s√°ch sau n·∫øu c√≥: [greeting, price_query, shipping_query, product_info_query, compliment, complaint, connection_request, spam, fallback, clarification, other]. N·∫øu kh√¥ng, ƒë·ªÅ xu·∫•t "other".\n3.  **Suggest Template Ref:** ƒê·ªÅ xu·∫•t m·ªôt m√£ tham chi·∫øu ng·∫Øn g·ªçn, m√¥ t·∫£, duy nh·∫•t (ch·ªØ th∆∞·ªùng, s·ªë, g·∫°ch d∆∞·ªõi, vd: `reply_price_general`, `ask_shipping_details`).\n4.  **Create Reusable Template Text:** T·ªïng qu√°t h√≥a "Assistant (AI) Replied" th√†nh m·∫´u vƒÉn b·∫£n ti·∫øng Vi·ªát t√°i s·ª≠ d·ª•ng. Thay chi ti·∫øt b·∫±ng placeholder [Name], [Time], [ID], [Number] n·∫øu h·ª£p l√Ω. N·∫øu kh√¥ng th·ªÉ, ghi "Cannot generalize".\n\n### ƒê·ªãnh d·∫°ng Output:\nCh·ªâ tr·∫£ l·ªùi theo **ch√≠nh x√°c** ƒë·ªãnh d·∫°ng sau, m·ªói m·ª•c tr√™n m·ªôt d√≤ng:\nKeywords: <keywords>\nCategory: <category>\nTemplate Ref: <template_ref>\nTemplate Text: <template text ho·∫∑c "Cannot generalize">',
    NOW()
),
(
    'Default Detect Intent', 'detect_intent',
    E'Ph√¢n lo·∫°i √Ω ƒë·ªãnh ch√≠nh c·ªßa tin nh·∫Øn ti·∫øng Vi·ªát sau ƒë√¢y v√†o M·ªòT trong c√°c lo·∫°i sau: [{{ valid_intents_list | join(", ") }}].\n\nTin nh·∫Øn:\n"""\n{{ text }}\n"""\n\nCh·ªâ tr·∫£ v·ªÅ DUY NH·∫§T nh√£n √Ω ƒë·ªãnh (vi·∫øt th∆∞·ªùng, ti·∫øng Anh, kh√¥ng d·∫•u, kh√¥ng gi·∫£i th√≠ch). V√≠ d·ª•: price_query',
    NOW()
)
ON CONFLICT (name) DO UPDATE SET -- C·∫≠p nh·∫≠t n·∫øu t√™n ƒë√£ t·ªìn t·∫°i
    template_content = EXCLUDED.template_content,
    task_type = EXCLUDED.task_type,
    updated_at = NOW();

-- 3. Strategies (Th√™m chi·∫øn l∆∞·ª£c m·∫∑c ƒë·ªãnh - B∆∞·ªõc 1)
INSERT INTO public.strategies (strategy_id, name, description, initial_stage_id) VALUES
('default_strategy', 'Default Interaction', 'Lu·ªìng t∆∞∆°ng t√°c chung, m·∫∑c ƒë·ªãnh.', NULL) -- Initial stage t·∫°m th·ªùi NULL
ON CONFLICT (strategy_id) DO NOTHING;

-- 4. Strategy Stages (Th√™m c√°c stage cho chi·∫øn l∆∞·ª£c m·∫∑c ƒë·ªãnh)
INSERT INTO public.strategy_stages (stage_id, strategy_id, description, stage_order) VALUES
('initial', 'default_strategy', 'Giai ƒëo·∫°n b·∫Øt ƒë·∫ßu t∆∞∆°ng t√°c', 0),
('information_gathering', 'default_strategy', 'Giai ƒëo·∫°n thu th·∫≠p th√™m th√¥ng tin', 1),
('providing_info', 'default_strategy', 'Giai ƒëo·∫°n cung c·∫•p th√¥ng tin / tr·∫£ l·ªùi', 2),
('closing', 'default_strategy', 'Giai ƒëo·∫°n k·∫øt th√∫c h·ªôi tho·∫°i', 99)
ON CONFLICT (stage_id) DO NOTHING;

-- 4.5 C·∫≠p nh·∫≠t initial_stage_id cho strategies
UPDATE public.strategies SET initial_stage_id = 'initial' WHERE strategy_id = 'default_strategy';

-- 5. Response Templates (Th√™m v√†i template c∆° b·∫£n)
INSERT INTO public.response_templates (template_ref, category, description) VALUES
('greet_hello', 'greeting', 'Ch√†o h·ªèi th√¥ng th∆∞·ªùng'),
('fallback_generic', 'fallback', 'Ph·∫£n h·ªìi chung khi kh√¥ng bi·∫øt tr·∫£ l·ªùi g√¨'),
('ask_more_info', 'clarification', 'H·ªèi th√™m chi ti·∫øt'),
('confirm_received', 'confirmation', 'X√°c nh·∫≠n ƒë√£ nh·∫≠n th√¥ng tin'),
('fallback_make_friend', 'fallback', 'Ph·∫£n h·ªìi d·ª± ph√≤ng cho m·ª•c ti√™u K·∫øt b·∫°n'),
('fallback_product_sales', 'fallback', 'Ph·∫£n h·ªìi d·ª± ph√≤ng cho m·ª•c ti√™u B√°n h√†ng')
ON CONFLICT (template_ref) DO NOTHING;

-- 6. Template Variations (Th√™m bi·∫øn th·ªÉ)
INSERT INTO public.template_variations (template_ref, variation_text) VALUES
('greet_hello', 'Xin ch√†o b·∫°n!'),
('greet_hello', 'Ch√†o b·∫°n, m√¨nh c√≥ th·ªÉ gi√∫p g√¨?'),
('greet_hello', 'Hi b·∫°n ^^'),
('fallback_generic', 'C·∫£m ∆°n b·∫°n ƒë√£ chia s·∫ª th√¥ng tin ·∫°.'),
('fallback_generic', 'M√¨nh ƒë√£ ghi nh·∫≠n th√¥ng tin n√†y r·ªìi nh√©.'),
('fallback_generic', 'Hmm, ƒë·ªÉ m√¨nh xem l·∫°i v·∫•n ƒë·ªÅ n√†y m·ªôt ch√∫t.'),
('ask_more_info', 'B·∫°n c√≥ th·ªÉ n√≥i r√µ h∆°n ƒë∆∞·ª£c kh√¥ng ·∫°?'),
('ask_more_info', 'ƒê·ªÉ hi·ªÉu r√µ h∆°n, b·∫°n cung c·∫•p th√™m chi ti·∫øt gi√∫p m√¨nh nh√©?'),
('ask_more_info', 'M√¨nh ch∆∞a r√µ l·∫Øm √Ω b·∫°n, b·∫°n gi·∫£i th√≠ch th√™m ƒë∆∞·ª£c kh√¥ng?'),
('confirm_received', 'Ok b·∫°n, m√¨nh nh·∫≠n ƒë∆∞·ª£c r·ªìi nh√©.'),
('confirm_received', 'ƒê√£ nh·∫≠n th√¥ng tin ·∫°.'),
('confirm_received', 'Okie b·∫°n!'),
('fallback_make_friend','Oke b·∫°n! ^^'),
('fallback_make_friend','C·∫£m ∆°n b·∫°n nha!'),
('fallback_product_sales','D·∫° v√¢ng ·∫°.'),
('fallback_product_sales','C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ·∫°!')
ON CONFLICT DO NOTHING; -- Gi·∫£ ƒë·ªãnh kh√¥ng c√≥ r√†ng bu·ªôc UNIQUE(template_ref, variation_text)

-- 7. Accounts (Th√™m t√†i kho·∫£n v√≠ d·ª•)
INSERT INTO public.accounts (account_id, platform, username, status, goal, notes, default_strategy_id, default_persona_id, created_at, updated_at) VALUES
('test_fb_01', 'facebook', 'FB Test User', 'active', 'make_friend', 'T√†i kho·∫£n d√πng ƒë·ªÉ test k·∫øt b·∫°n', 'default_strategy', 'general_assistant', NOW(), NOW()),
('test_tiktok_01', 'tiktok', 'TikTok Sales Test', 'active', 'product_sales', 'T√†i kho·∫£n test b√°n h√†ng', 'default_strategy', 'sales_friendly_female', NOW(), NOW())
ON CONFLICT (account_id) DO NOTHING;

-- 8. Stage Transitions (Th√™m lu·∫≠t chuy·ªÉn ti·∫øp c∆° b·∫£n)
INSERT INTO public.stage_transitions (current_stage_id, user_intent, condition_logic, next_stage_id, action_to_suggest, response_template_ref, priority) VALUES
('initial', 'greeting', NULL, 'initial', NULL, 'greet_hello', 10),
('initial', 'product_info_query', NULL, 'information_gathering', NULL, 'ask_more_info', 5),
('initial', 'price_query', NULL, 'information_gathering', NULL, 'ask_more_info', 5),
('information_gathering', 'positive_generic', NULL, 'providing_info', NULL, 'confirm_received', 5),
('information_gathering', 'compliment', NULL, 'providing_info', NULL, 'confirm_received', 5),
('initial', 'any', NULL, 'providing_info', NULL, NULL, 0), -- N·∫øu kh√¥ng kh·ªõp g√¨ ·ªü initial -> ƒë·ªÉ AI x·ª≠ l√Ω v√† sang providing_info
('information_gathering', 'any', NULL, 'providing_info', NULL, NULL, 0), -- N·∫øu ƒëang h·ªèi m√† nh·∫≠n ƒë∆∞·ª£c g√¨ kh√°c -> ƒë·ªÉ AI x·ª≠ l√Ω v√† sang providing_info
('providing_info', 'compliment', NULL, 'closing', NULL, 'fallback_generic', 5), -- Nh·∫≠n l·ªùi khen -> c·∫£m ∆°n v√† k·∫øt th√∫c
('providing_info', 'greeting', NULL, 'providing_info', NULL, 'greet_hello', 1) -- N·∫øu ƒëang n√≥i chuy·ªán m√† ch√†o -> ch√†o l·∫°i
ON CONFLICT (transition_id) DO NOTHING; -- transition_id l√† SERIAL

-- 9. Task State (Kh·ªüi t·∫°o tr·∫°ng th√°i cho t√°c v·ª• n·ªÅn)
INSERT INTO public.task_state (task_name, last_processed_id, last_run_timestamp) VALUES
('suggestion_job', 0, NULL)
ON CONFLICT (task_name) DO UPDATE SET
    last_processed_id = LEAST(EXCLUDED.last_processed_id, public.task_state.last_processed_id), -- Gi·ªØ ID c≈© h∆°n n·∫øu ch·∫°y l·∫°i script
    last_run_timestamp = NULL; -- Reset th·ªùi gian ch·∫°y cu·ªëi


COMMIT; -- K·∫øt th√∫c transaction